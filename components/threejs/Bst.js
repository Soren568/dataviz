/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import { Html } from '@react-three/drei'
export default function Model({ ...props }) {
  const group = useRef()
  const { nodes, materials } = useGLTF('/bst.gltf')

  useFrame((state) => {
    const t = state.clock.getElapsedTime()
    group.current.rotation.set(0.1 + Math.cos(t / 4.5) / 10, Math.sin(t / 4) / 4, 0.3 - (1 + Math.sin(t / 4)) / 8)
    group.current.position.y = (1 + Math.sin(t / 2)) / 10
  })
  materials.SphereColor.metalness = .8
  materials.SphereColor.roughness = .5
  console.log(materials.SphereColor)
  return (
    <group ref={group} {...props} dispose={null}>
      <group position={[-8, -0, 3]} rotation={[0, 0, -Math.PI / 4]} scale={[0.1, 1.5, 0.1]}>
        <mesh geometry={nodes.Cylinder009.geometry} material={materials.ConnectorColor}>
        </mesh>
        <mesh geometry={nodes.Cylinder009_1.geometry} material={materials.SphereColor} color={0x60a5fa}>
          {/* <Html distanceFactor={10}>
            <div className="bg-gray-800 p-4 text-2xl text-white"> Node</div>
          </Html> */}
        </mesh>
      </group>
    </group>
  )
}

useGLTF.preload('/bst.gltf')
